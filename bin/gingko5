#!/usr/bin/env perl

# Gingko5
# Copyright 2018 Vision5

use 5.010001;
use strict;
use warnings;

use JSON;
use LWP::Simple;
use Module::Load;
use Text::Markdown 'markdown';
use Text::PerlPP;
use YAML::Tiny;

my $site;
my $page;
my $module;

sub page_build;
sub page_copy_inc_files;
sub page_create_build_dir;
sub page_gen_file;
sub page_init;
sub parse_args;
sub shell;
sub site_init;
sub site_load;
sub site_fetch_gingko_tree;

sub Main {
    parse_args;
    site_init;
    site_fetch_gingko_tree;
    page_build;
}

sub parse_args {

    my $inc_dir;

    for my $opt (@ARGV) {
        next unless defined $opt;

        if ($opt =~ /^--inc-dir=(.*)/) {
            $inc_dir = $1;
            push @INC, $inc_dir;    
            next;
            
        } elsif ($opt =~ /^--module=(.*)/) {
            $module = $1;     
            next;

        } else {
            die "Invalid option $opt\n";
        }
    }

    if (!$inc_dir) {
        die ("--inc-dir=[PATH] is not set");
    }

    if (!$module) {
        die ("--module=[MODULE] is not set");
    }
}

sub site_init {
    
    $module = "Gingko5::$module";
    load $module;
    $site = "$module"->site_init();
}

sub site_fetch_gingko_tree {

    my $url = "https://gingkoapp.com/$site->{gingko_tree}.json";
    my $json = get ($url) or die ("Could not fetch Gingko JSON : $url");
    my $cards = decode_json ($json);
        
    $site->{gingko_url} = $url;
    $site->{gingko_json} = $json;
    $site->{gingko_cards} = $cards;
}

sub page_build {
    page_init;
    page_create_build_dir;
    page_copy_inc_files;
    page_gen_file;
}

sub page_init {

    my %page_conf;
    $page = \%page_conf;
    
    $page_conf{build_dir} = $site->{build_dir} . '/test';
    $page_conf{template} = $site->{template};
}

sub page_create_build_dir {
    shell 
        "mkdir -p $page->{build_dir}", 
        "Cannot create build dir $page->{build_dir}";
}

sub page_copy_inc_files {
    shell 
        "cp -fr $site->{inc_dir}/* $page->{build_dir}/", 
        "Cannot copy include files from $site->{inc_dir} to $page->{build_dir}";
}

sub page_gen_file {

    my $in_file = "$page->{build_dir}/$page->{template}";
    my $out_file = "$page->{build_dir}/out.html";

    my @argv = ['-o', $out_file, $in_file];

    return  Text::PerlPP->new->Main(@argv);
}

sub shell {
    
    my $cmd = shift;
    my $err = shift;
    
    #print "$cmd\n";
    (system $cmd) eq 0 or die ($err);    
}

Main;
